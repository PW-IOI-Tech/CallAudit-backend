"""Initial migration

Revision ID: 3460bd6feaac
Revises:
Create Date: 2025-07-17 09:19:36.970668

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3460bd6feaac"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "managers",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "auditors",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("manager_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "counsellors",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("auditor_id", sa.String(), nullable=False),
        sa.Column("manager_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auditor_id"],
            ["auditors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "calls",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("counsellor_id", sa.String(), nullable=False),
        sa.Column("auditor_id", sa.String(), nullable=False),
        sa.Column("manager_id", sa.String(), nullable=False),
        sa.Column("call_start", sa.DateTime(), nullable=False),
        sa.Column("call_end", sa.DateTime(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("call_type", sa.String(), nullable=True),
        sa.Column("client_number", sa.String(), nullable=False),
        sa.Column("recording_url", sa.String(), nullable=True),
        sa.Column("is_audited", sa.Boolean(), nullable=True),
        sa.Column("is_flagged", sa.Boolean(), nullable=True),
        sa.Column("audit_score", sa.Float(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auditor_id"],
            ["auditors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["counsellor_id"],
            ["counsellors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "leads",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("counsellor_id", sa.String(), nullable=False),
        sa.Column("auditor_id", sa.String(), nullable=False),
        sa.Column("manager_id", sa.String(), nullable=False),
        sa.Column("client_name", sa.String(), nullable=True),
        sa.Column("client_number", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("note", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auditor_id"],
            ["auditors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["counsellor_id"],
            ["counsellors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "audit_reports",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("call_id", sa.String(), nullable=False),
        sa.Column("auditor_id", sa.String(), nullable=False),
        sa.Column("manager_id", sa.String(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("comments", sa.Text(), nullable=True),
        sa.Column("is_flagged", sa.Boolean(), nullable=True),
        sa.Column("flag_reason", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auditor_id"],
            ["auditors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["call_id"],
            ["calls.id"],
        ),
        sa.ForeignKeyConstraint(
            ["manager_id"],
            ["managers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "call_analysis",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("call_id", sa.String(), nullable=False),
        sa.Column("sentiment_score", sa.Float(), nullable=True),
        sa.Column("transcript", sa.Text(), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("anomalies", sa.Text(), nullable=True),
        sa.Column("keywords", sa.String(), nullable=True),
        sa.Column("ai_confidence", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["call_id"],
            ["calls.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("call_id"),
    )
    op.drop_index(op.f("idx_users_email_active"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
        sa.UniqueConstraint(
            "email",
            name=op.f("users_email_key"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("idx_users_email_active"), "users", ["email"], unique=False)
    op.drop_table("call_analysis")
    op.drop_table("audit_reports")
    op.drop_table("leads")
    op.drop_table("calls")
    op.drop_table("counsellors")
    op.drop_table("auditors")
    op.drop_table("managers")
    # ### end Alembic commands ###
